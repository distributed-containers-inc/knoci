commands:
  - name: codegen
    command: |
      set -eu -o pipefail
      export PACKAGE=github.com/distributed-containers-inc/knoci

      rm -rf $PACKAGE/pkg/client

      echo 'Building openapi schema...'
      openapi-gen \
        -i $PACKAGE/pkg/apis/testing/v1alpha1 \
        -p $PACKAGE/pkg/apis/testing/v1alpha1 \
        --report-filename api_violations.list
      if grep -v -e k8s.io/api/ -e k8s.io/apimachinery/ api_violations.list; then
        echo 'Violations found!'
        exit 1
      else
        rm api_violations.list
      fi
      
      echo 'Generating deepcopy functions...'
      deepcopy-gen \
        --input-dirs=${PACKAGE}/pkg/apis/testing/v1alpha1 \
        --output-file-base='zz_deepcopy_generated' \
        --bounding-dirs=${PACKAGE}/pkg/apis

      echo 'Generating clientset...'
      client-gen \
        --input-base "" \
        --input="$PACKAGE/pkg/apis/testing/v1alpha1" \
        --clientset-name="versioned" \
        --output-package="$PACKAGE/pkg/client"

      echo 'Generating listers...'
      lister-gen \
        --input-dirs="${PACKAGE}/pkg/apis/testing/v1alpha1" \
        --output-package="${PACKAGE}/pkg/client/listers"

      echo 'Generating informers...'
      informer-gen \
        --input-dirs="${PACKAGE}/pkg/apis/testing/v1alpha1" \
        --output-package="${PACKAGE}/pkg/client/informers" \
        --internal-clientset-package="${PACKAGE}/pkg/client/versioned" \
        --versioned-clientset-package="${PACKAGE}/pkg/client/versioned" \
        --listers-package="${PACKAGE}/pkg/client/listers" \
        --single-directory

  - name: deploy
    command: |
      set -eu -o pipefail
      sanic build --push
      sanic kubectl delete crd tests.knoci.distributedcontainers.com || true
      sanic deploy
      sleep 2
      (
        cd example;
        unset SANIC_ENV
        sanic env dev sanic build --push;
        sanic env dev sanic deploy;
      )

  - name: full_deploy
    command: |
      set -eu -o pipefail
      echo 'Generating sources...'
      sanic run codegen
      sanic run deploy

  - name: logs
    command: |
      set -eu -o pipefail
      sanic kubectl get po -n kube-system -o name | grep knoci | xargs sanic kubectl logs -n kube-system


environments:
  dev:
    clusterProvisioner: localdev

build:
  ignoreDirs:
  - example
